<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       					   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       					   http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
       default-autowire="byType" >


    <security:http auto-config="true">
        <!--security:intercept-url pattern="/welcome*" access="ROLE_USER" /-->

        <security:form-login login-page="/page/login.jsf" default-target-url="/page/welcome.jsf" authentication-failure-url="/page/login.jsf?error=true" />
        <security:logout logout-success-url="/page/login.jsf" />
        <security:intercept-url pattern="/page/welcome.jsf" access="IS_AUTHENTICATED_FULLY"  />
        <security:session-management session-fixation-protection="migrateSession" session-authentication-error-url="/page/login.jsf?authFailed=true">
            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true" expired-url="/page/login.xhtml" session-registry-alias="sessionRegistry"/>
        </security:session-management>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider>
            <!--security:user-service>
                <security:user name="gaetani" authorities="IS_AUTHENTICATED_FULLY" password="1234"/>
            </security:user-service-->
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query="select username,password, enable from users where username=?"
                                        authorities-by-username-query="select username, authority from authorities where username = ?"/>
        </security:authentication-provider>
    </security:authentication-manager>



    <bean id="propertyPlaceholder"
              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="ignoreUnresolvablePlaceholders" value="false"/>
            <property name="ignoreResourceNotFound" value="false"/>
            <property name="order" value="1"/>
            <property name="locations">
                <list>
                    <value>classpath:hibernate_mysql.properties</value>
					<value>classpath:settings.properties</value>
				</list>
            </property>
    </bean>


	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${db1.hibernate.connection.driver_class}" />
		<property name="url" value="${db1.hibernate.connection.url}" />
		<property name="username" value="${db1.hibernate.connection.username}" />
		<property name="password" value="${db1.hibernate.connection.password}" />
	</bean>

    <bean id="sessionFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceProviderClass" value="org.hibernate.ejb.HibernatePersistence"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${db1.hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${db1.hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${db1.hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${db1.hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.cache.provider_class">${db1.hibernate.cache.provider_class}</prop>
                <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>br.com.estacio.persistence.entity</value>
            </list>
        </property>
    </bean>



    <!--bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="entityManagerFactory">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceUnitName" value="manager1"/>

    </bean-->

    <bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager">
        <property name="entityManagerFactory" ref="sessionFactory"/>
    </bean>

	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<context:annotation-config/>
    <context:component-scan base-package="br.com.estacio.gui" />
    <jpa:repositories base-package="br.com.estacio.persistence.repository"/>

</beans>
